require 'nokogiri'
require 'open-uri'
require 'pry'
require_relative '../lib/program.rb'
require_relative '../lib/webpage.rb'

describe Program do
  let(:program) { Program.new }
  let(:search_page) { WebPage.new(search_address)}
  let(:artist_page) { WebPage.new(artist_address)}
  let(:lyrics_page) { WebPage.new(lyrics_address)}
  let(:search_address) { 'https://search.azlyrics.com/search.php?q=the+beatles' }
  let(:artist_address) { 'https://www.azlyrics.com/b/beatles.html' }
  let(:lyrics_address) { 'https://www.azlyrics.com/lyrics/beatles/twistandshout.html' }
  let(:search_terms) { %w[the beatles]}

  # describe '#initalize' do
  #   it 'creates a new instance of the Program class' do
  #     expect(program.class).to eql(Program)
  #   end

  #   it "sets the new Program instance's @current_page attribute to nil" do
  #     expect(program.current_page).to be_nil
  #   end

  #   it "sets the new Program instance's @active attribute to true" do
  #     expect(program.active).to eql(true)
  #   end
  # end

  # describe '#display_content' do
  #   it 'returns a printable array of strings' do
  #     program.current_page = search_page
  #     output = program.display_content
  #     expect(output.is_a?(Array)).to eql(true)
  #     output.each { |e| expect(e.is_a?(String)).to eql(true)}
  #   end
  # end

  # describe '#change_page' do
  #   it "sets the Program's @current_page attribute to a WebPage object" do
  #     program.change_page(search_address)
  #     expect(program.current_page).to be_an_instance_of(WebPage)
  #   end
  # end

  # describe '#follow_link' do
  #   it "changes the current_page by following a link in the current_page's @links hash" do
  #     program.current_page = search_page
  #     program.follow_link('the beatles')
  #     expect(program.current_page.type_of_page).to eql(:artist)
  #   end
  # end

  # describe '#go_to_search_page' do
  #   it 'changes the current_page to be the search page generated by the search terms passed' do
  #     program.go_to_search_page(search_terms)
  #     expect(program.current_page.web_address).to eql(search_address)
  #   end
  # end

  # describe '#return_to_artist_page' do
  #   it "changes the current_address from a lyrics page to the artist page of the song's artist" do
  #     program.current_page = artist_page
  #     program.return_to_artist_page
  #     expect(program.current_page.web_address).to eql(artist_address)
  #   end
  # end

  # describe '#process_input' do
  #   it 'changes the current_page to a search page if the current_page.type_of_page is nil' do
  #     program.process_input('the beatles')
  #     expect(program.current_page.web_address).to eql(search_address)
  #   end

  #   it 'changes the current_page by following a link if the current_page.type_of_page is :search or :artist' do
  #     program.current_page = search_page
  #     program.process_input('the beatles')
  #     expect(program.current_page.web_address).to eql(artist_address)
  #     program.process_input('twist and shout')
  #     expect(program.current_page.web_address).to eql(lyrics_address)
  #   end

  #   it 'sets current_page to nil if the user inputs 1 and the current_page.type_of_page is :lyrics' do
  #     program.current_page = lyrics_page
  #     program.process_input('1')
  #     expect(program.current_page).to be_nil
  #   end

  #   it "return current_page to the song's artist's page if the user inputs 2 and the current_page.type_of_page is :lyrics" do
  #     program.current_page = lyrics_page
  #     program.process_input('2')
  #     expect(program.current_page.web_address).to eql(artist_address)
  #   end

  #   it 'sets self_active to false if the user inputs 3 and the current_page.type_of_page is :lyrics' do
  #     program.current_page = lyrics_page
  #     program.process_input('3')
  #     expect(program.active).to eql(false)
  #   end
  # end

  # describe '#process_search_terms' do
  #   it 'changes the current_page to a search page generated by a string of search terms' do
  #     program.process_search_terms('the beatles')
  #     expect(program.current_page.web_address).to eql(search_address)
  #   end
  # end

  # describe '#process_link_selection' do
  #   it 'changes the current_page by following a link on the current page' do
  #     program.current_page = search_page
  #     program.process_input('the beatles')
  #     expect(program.current_page.web_address).to eql(artist_address)
  #   end
  # end

  # describe '#process_onward_path' do
  #   it 'sets the current_page to nil if passed "1" as a string' do
  #     program.current_page = lyrics_page
  #     program.process_input('1')
  #     expect(program.current_page).to eql(nil)
  #   end

  #   it "sets the current_page to the artist page of the current page's artist if passed '2' as a string" do
  #     program.current_page = lyrics_page
  #     program.process_input('2')
  #     expect(program.current_page.web_address).to eql(artist_address)
  #   end

  #   it 'sets @active to false if passed "3" as a string' do
  #     program.current_page = lyrics_page
  #     program.process_input('3')
  #     expect(program.active).to eql(false)
  #   end
  # end
end
